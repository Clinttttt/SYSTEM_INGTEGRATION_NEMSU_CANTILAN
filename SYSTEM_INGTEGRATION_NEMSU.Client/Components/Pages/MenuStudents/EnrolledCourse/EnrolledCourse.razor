@page "/enrolledcourse"
@inject IEnrollmentApiServices enrollmentApi
@rendermode InteractiveServer

<div class="relative h-screen content overflow-hidden">
    <div class="drawer lg:drawer-open h-screen">
        <input id="my-drawer-2" type="checkbox" class="drawer-toggle" />
        <div class="drawer-content flex flex-col h-screen overflow-auto">
            <label for="my-drawer-2" class="btn btn-primary drawer-button lg:hidden m-4">
                Open drawer
            </label>


            <div class="flex-1 p-6 bg-base-100">


                <div class="mb-6">
                    <div class="flex  gap-2 flex-row">
                  
                            <NavLink href="/studentmenu" class="btn btn-circle btn-ghost hover:bg-cyan-100 transition-colors">
                                <svg class="w-5 h-5 text-cyan-700" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                                </svg>
                            </NavLink>                
                        <div>                          
                            <h1 class="text-3xl font-semibold bg-gradient-to-r from-cyan-600 to-teal-600 bg-clip-text text-transparent">Enrolled Courses</h1>
                            <p class="text-gray-500 text-xs">1st Semester, A.Y. 2024-2025</p>
                        </div>
                    </div>
                </div>





                <div class="grid grid-cols-1 md:grid-cols-2 gap-3 mb-6">
                    <div class="md:col-span-2 bg-white rounded-lg shadow-sm p-3 border border-cyan-100">
                        <label class="block text-[10px] font-semibold text-gray-500 mb-1.5 uppercase tracking-wide">Search Courses</label>
                        <div class="relative">
                            <div class="absolute inset-y-0 left-0 pl-2.5 flex items-center pointer-events-none">
                                <svg class="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                                </svg>
                            </div>
                            <input type="text"
                            @bind="SearchQuery"
                            @bind:event="oninput"
                            @onkeyup="QueryAsync"
                            placeholder="Search by course code, name..."
                            class="w-full pl-9 pr-3 py-1.5 text-xs border border-gray-200 rounded-md focus:border-cyan-400 focus:ring-1 focus:ring-cyan-200 outline-none transition-all" />
                        </div>
                    </div>

                <!--    <div class="bg-white rounded-lg shadow-sm p-3 border border-cyan-100">
                        <label class="block text-[10px] font-semibold text-gray-500 mb-1.5 uppercase tracking-wide">Filter by Status</label>
                        <select class="w-full px-2.5 py-1.5 text-xs  text-gray-500  border border-gray-200 rounded-md focus:border-cyan-400 focus:ring-1 focus:ring-cyan-200 outline-none transition-all">
                            <option>All Courses</option>
                            <option>In Progress</option>
                            <option>Completed</option>
                            <option>Unpaid</option>
                        </select>
                    </div>-->
                </div>


                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3 pb-13">


                    @if (Filtered is not null)
                    {
                        foreach (var course in Filtered)
                        {
                            <div class="bg-white rounded-xl shadow-md border border-cyan-100 hover:shadow-xl transition-all overflow-hidden">
                                <div class="relative">
                                    <div class="absolute top-0 right-0 w-32 h-32 bg-white opacity-10 rounded-full -mr-16 -mt-16"></div>
                                    <div class="absolute bottom-0 left-0 w-24 h-24 bg-white opacity-10 rounded-full -ml-12 -mb-12"></div>

                                    <div class="@($"{GetColorGradient(course.Category?.Color ?? "bg-gray-600")} p-4 text-white")">

                                        <div class="flex items-center justify-between mb-2">
                                            <span class="text-xs font-bold uppercase tracking-wide">@course.CourseCode</span>
                                            <span class="px-2 py-0.5 rounded-full text-[9px] font-semibold text-white @(course.EnrollmentStatus == EnrollmentStatus.Provisioned ? "bg-gray-400" : "bg-orange-400")">@course.EnrollmentStatus.GetDisplayName()</span>
                                        </div>
                                        <h3 class="text-sm text-white font-bold mb-1">@course.Title</h3>
                                        <p class="text-cyan-100 text-[10px]">Prof. @course.FacultyFullName</p>
                                    </div>


                                </div>

                                <div class="p-4 space-y-3">


                                    <div class="flex items-center gap-2 text-xs text-gray-600">
                                        <svg class="w-3 h-3 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                        </svg>
                                        @course.Schedule
                                    </div>

                                    <div class="flex items-center gap-2 text-xs text-gray-600">
                                        <svg class="w-3 h-3 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                        </svg>
                                        @course.Room
                                    </div>

                                    <div class="pt-2 border-t border-gray-100">

                                        <div class="flex items-center justify-between text-xs">
                                            <span class="text-gray-500">Units</span>
                                            <span class="font-semibold text-gray-600">@course.Unit</span>
                                        </div>
                                    </div>

                                    <NavLink href="@($"/coursedetails/{course.CourseId}")" class="@($"w-full px-3 py-2 btn bg-gradient-to-r {GetButtonGradient(course.Category?.Color ?? "from-gray-500 to-gray-600 hover:from-gray-600 hover:to-gray-700")}  text-white rounded-lg text-xs font-semibold  transition-all shadow-sm flex items-center justify-center gap-2")">
                                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                                        </svg>
                                        View Course Details
                                    </NavLink>
                                </div>
                            </div>


                        }
                    }





                </div>
            </div>
        </div>


        <div class="drawer-side">
            <label for="my-drawer-2" aria-label="close sidebar" class="drawer-overlay"></label>
            <div class="min-h-full w-64 bg-white shadow-xl flex flex-col border-r border-r-gray-200">


                <div class="p-6 bg-gradient-to-br from-cyan-500 to-teal-600">
                    <div class="flex flex-col items-center">
                        <div class="w-20 h-20 rounded-full bg-white p-1 shadow-lg mb-3">
                            <img src="/img/student_logo.jpg" class="w-full h-full object-contain rounded-full" />
                        </div>
                        <h3 class="text-white font-bold text-sm">Student Dashboard</h3>
                    </div>
                </div>


                <nav class="flex-1 p-4 overflow-y-auto">




                    <div class="space-y-1 mb-6">
                        <NavLink href="/enrolledcourse" class="flex items-center gap-3 px-4 py-3 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors group">
                            <svg class="w-5 h-5 text-gray-400 group-hover:text-cyan-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                            </svg>
                            <span class="font-medium">My Courses</span>
                        </NavLink>

                        <NavLink href="/paymenthistory" class="flex items-center gap-3 px-4 py-3 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors group">
                            <svg class="w-5 h-5 text-gray-400 group-hover:text-cyan-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z" />
                            </svg>
                            <span class="font-medium">Payments</span>
                        </NavLink>

                        <NavLink href="/profileinformation" class="flex items-center gap-3 px-4 py-3 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors group">
                            <svg class="w-5 h-5 text-gray-400 group-hover:text-cyan-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                            </svg>
                            <span class="font-medium">Profile</span>
                        </NavLink>

                        <NavLink href="/announcement" class="flex items-center gap-3 px-4 py-3 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors group">
                            <svg class="w-5 h-5 text-gray-400 group-hover:text-cyan-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5.882V19.24a1.76 1.76 0 01-3.417.592l-2.147-6.15M18 13a3 3 0 100-6M5.436 13.683A4.001 4.001 0 017 6h1.832c4.1 0 7.625-1.234 9.168-3v14c-1.543-1.766-5.067-3-9.168-3H7a3.988 3.988 0 01-1.564-.317z" />
                            </svg>
                            <span class="font-medium">Announcements</span>
                        </NavLink>
                    </div>


                    <div class="border-t border-gray-200 my-4"></div>


                    <div class="space-y-1">
                        <a class="flex items-center gap-3 px-4 py-3 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors group cursor-pointer">
                            <svg class="w-5 h-5 text-gray-400 group-hover:text-cyan-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" />
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                            </svg>
                            <span class="font-medium">Settings</span>
                        </a>

                        <a class="flex items-center gap-3 px-4 py-3 text-red-600 rounded-lg hover:bg-red-50 transition-colors group cursor-pointer">
                            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1" />
                            </svg>
                            <span class="font-medium">Logout</span>
                        </a>
                    </div>
                </nav>


                <div class="p-4 border-t border-gray-200 bg-gray-50">
                    <p class="text-xs text-gray-500 text-center">© 2025 Student Portal</p>
                </div>
            </div>
        </div>
    </div>
</div>
@code {
    [Parameter]
    public List<EnrollCourseDto>? courses { get; set; }
    public bool hasrender = false;

    private List<EnrollCourseDto>? Filtered { get; set; }
    private string? SearchQuery = "";

    protected override async Task OnAfterRenderAsync(bool firstrender)
    {
        if (!hasrender && firstrender)
        {
            hasrender = true;
            courses = await enrollmentApi.DisplayAllCourseEnrolledAsync();
            Filtered = courses;
            StateHasChanged();
        }
     
    }
    public void QueryAsync()
    {
        if (string.IsNullOrWhiteSpace(SearchQuery))
        {
            Filtered = courses?.ToList();
        }
        else
        {
            var query = SearchQuery.ToLower();
            Filtered = courses?.Where(s => s.Title!.ToLower().Contains(query) || s.CourseCode!.ToLower().Contains(SearchQuery))
               .ToList();
        }
        StateHasChanged();
    }








    private Dictionary<string, string> colorGradients = new()
        {
            ["teal"] = "bg-gradient-to-br from-teal-400 via-teal-500 to-cyan-600",
            ["blue"] = "bg-gradient-to-br from-blue-400 via-blue-500 to-indigo-600",
            ["green"] = "bg-gradient-to-br from-green-400 via-green-500 to-emerald-600",
            ["orange"] = "bg-gradient-to-br from-orange-400 via-orange-500 to-red-500",
            ["purple"] = "bg-gradient-to-br from-purple-400 via-purple-500 to-pink-500",
            ["indigo"] = "bg-gradient-to-br from-indigo-400 via-indigo-500 to-blue-600",
            ["pink"] = "bg-gradient-to-br from-pink-400 via-pink-500 to-rose-500"
        };
    private Dictionary<string, string> colorButtonGradients = new()
        {
            ["teal"] = "from-teal-500 to-cyan-600 hover:from-teal-600 hover:to-cyan-700",
            ["blue"] = "from-blue-500 to-indigo-600 hover:from-blue-600 hover:to-indigo-700",
            ["green"] = "from-green-500 to-emerald-600 hover:from-green-600 hover:to-emerald-700",
            ["orange"] = "from-orange-500 to-red-500 hover:from-orange-600 hover:to-red-600",
            ["purple"] = "from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600",
            ["indigo"] = "from-indigo-500 to-blue-600 hover:from-indigo-600 hover:to-blue-700",
            ["pink"] = "from-pink-500 to-rose-500 hover:from-pink-600 hover:to-rose-600"
        };
    private Dictionary<string, string> categoryTextColors = new()
        {
            ["teal"] = "text-teal-600",
            ["blue"] = "text-blue-600",
            ["green"] = "text-green-600",
            ["orange"] = "text-orange-600",
            ["purple"] = "text-purple-600",
            ["indigo"] = "text-indigo-600",
            ["pink"] = "text-pink-600"
        };

    private string GetTextColors(string color)
    {
        return color != null && categoryTextColors.ContainsKey(color)
        ? categoryTextColors[color]
         : "text-gray-600";
    }
    private string GetButtonGradient(string color)
    {
        return color != null && colorButtonGradients.ContainsKey(color)
        ? colorButtonGradients[color]
          : "from-gray-500 to-gray-600 hover:from-gray-600 hover:to-gray-700";
    }

    private string GetColorGradient(string color)
    {
        return color != null && colorGradients.ContainsKey(color)
        ? colorGradients[color]
          : "bg-gradient-to-br from-gray-400 via-gray-500 to-gray-600";
    }


}