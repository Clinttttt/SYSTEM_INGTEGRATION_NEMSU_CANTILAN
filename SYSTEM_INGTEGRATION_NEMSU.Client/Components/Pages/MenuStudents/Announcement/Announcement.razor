@page "/announcement"
@inject IEnrollmentApiServices enrollmentApi
@rendermode InteractiveServer

<div class="relative h-screen content overflow-hidden">
    <div class="drawer lg:drawer-open h-screen">
        <input id="my-drawer-2" type="checkbox" class="drawer-toggle" />
        <div class="drawer-content flex flex-col h-screen overflow-auto">


            <div class="flex-1 bg-gradient-to-br from-cyan-50 via-blue-50 to-teal-50 p-6 pb-18">


                <div class="mb-6">
                    <label for="my-drawer-2" class="btn btn-primary drawer-button lg:hidden mb-4">☰ Menu</label>
                    <div class="flex items-center justify-between">
                        <div>
                            <div class="flex gap-1">
                                <NavLink href="/studentmenu" class="btn btn-circle btn-ghost hover:bg-cyan-100 transition-colors">
                                    <svg class="w-5 h-5 text-cyan-700" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                                    </svg>
                                </NavLink>
                                <h1 class="text-4xl font-semibold bg-gradient-to-r from-cyan-600 to-teal-600 bg-clip-text text-transparent">Announcements</h1>
                            </div>
                            <p class="text-gray-600 mt-2">Stay updated with the latest news and important information</p>
                        </div>

                    </div>
                </div>

                <div class="max-w-6xl mx-auto">


                    <div class="flex gap-2 mb-6 overflow-x-auto pb-2">
                        <button @onclick="()=> AllAnnouncement()" class="btn bg-cyan-600 text-white btn-sm">All Announcements</button>
                        <button @onclick="()=> pageState(InformationType.Academic)" class="btn btn-outline btn-primary btn-sm">Academic</button>
                        <button @onclick="()=> pageState(InformationType.Events)" class="btn btn-outline btn-primary btn-sm">Events</button>
                        <button @onclick="()=> pageState(InformationType.Important)" class="btn btn-outline btn-primary btn-sm">Important</button>
                        <button @onclick="()=> pageState(InformationType.General)" class="btn btn-outline btn-primary btn-sm">General</button>
                    </div>


                    <div class="space-y-4">

                        @if (bytype is not null)
                        {
                            @foreach (var announcement in bytype)
                            {

                                <div class="@($"bg-gradient-to-r from-cyan-50 to-teal-50 border-l-4 {BorderType(announcement.InformationType)} rounded-xl shadow-lg p-6 hover:shadow-2xl transition-all")">

                                    <div class="flex items-start gap-4">

                                        <div class="flex-1">
                                            <div class="flex items-start justify-between mb-2">
                                                <div>
                                                    <span class="@($"px-3 py-1 {BGType(announcement.InformationType)} text-white rounded-full text-xs font-bold mr-2")">@announcement.InformationType.GetDisplayName()</span>
                                                    <span class="text-gray-500 text-sm">
                                                        @announcement.DateCreated.ToString("MMM d, yyyy • h:mm tt")
                                                    </span>
                                                    <span class="@($"{TextType(announcement.InformationType)} text-sm ml-2")">@announcement.CourseName</span>
                                                </div>
                                            </div>
                                            <h3 class="text-xl font-bold text-gray-700 mb-2">@announcement.Title</h3>
                                            <p class="text-gray-700 mb-3 line-clamp-2">
                                                @announcement.Message
                                            </p>
                                            <button class="@($"{TextType(announcement.InformationType)} font-semibold text-sm hover:underline")">Read More →</button>
                                        </div>
                                    </div>
                                </div>
                            }
                        }         
                    </div>
                </div>
            </div>
        </div>

        
        <div class="drawer-side">
            <label for="my-drawer-2" aria-label="close sidebar" class="drawer-overlay"></label>
            <ul class="menu min-h-full w-62 p-4 text-white" style="background: radial-gradient(at 0% 0%, rgb(6, 182, 212) 0px, transparent 50%), radial-gradient(at 100% 100%, rgb(14, 116, 144) 0px, transparent 50%), radial-gradient(at 100% 0%, rgb(8, 145, 178) 0px, transparent 50%), radial-gradient(at 0% 100%, rgb(21, 94, 117) 0px, transparent 50%), rgb(17, 24, 39);">
                <li class="mx-auto mb-4">
                    <div class="w-[92px] h-[92px] rounded-full border border-primary flex items-center justify-center overflow-hidden bg-white">
                        <img src="/img/student_logo.jpg" class="w-full h-full object-contain" />
                    </div>
                </li>
                <li><a class="text-white text-2xl font-light btn btn-outline btn-primary">Announcement</a></li>
                <li class="mt-10"><a class="text-white text-md btn-[40%] font-semibold btn btn-outline btn-primary">Course</a></li>
                <li class="mt-2"><a class="text-white text-md btn-[40%] font-semibold btn btn-outline btn-primary">Settings</a></li>
                <li class="mt-2"><a class="text-white text-md btn-[40%] font-semibold btn btn-outline btn-primary">Logout</a></li>
                <li class="mt-10"><NavLink href="/enrollment" class="text-white text-md btn-[40%] font-semibold btn btn-outline btn-primary">Enrollment</NavLink></li>
                <li class="mt-2"><NavLink href="/profileinformation" class="text-white text-md btn-[40%] font-semibold btn btn-outline btn-primary">Profile</NavLink></li>
                <li class="mt-2"><NavLink href="/enrolledcourse" class="text-white text-md btn-[40%] font-semibold btn btn-outline btn-primary">Enrolled Course</NavLink></li>
            </ul>
        </div>
    </div>
</div>

@code {
    public List<AnnouncementDto>? announcements { get; set; }
    public bool hasrender = false;
    public List<AnnouncementDto>? filtered { get; set; }
    public List<AnnouncementDto>? bytype { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstrender)
    {
        if (!hasrender && firstrender)
        {
            hasrender = true;
            announcements = await enrollmentApi.DisplayAllAnnouncementAsync();
            bytype = announcements;
        }
        StateHasChanged();
    }
    public async Task pageState(InformationType type)
    { 
        bytype = await enrollmentApi.DisplayAnnouncementByType(type);      
    }
    public void AllAnnouncement()
    {
        bytype = announcements;
    }


    private string BorderType(InformationType type) =>   
        type switch
        {
            InformationType.Important => "border-cyan-500",
            InformationType.Academic => "border-teal-500",
            InformationType.Events => "border-amber-500",
            InformationType.General => "border-gray-500",
            _ => "text-gray-600"
        };
    private string BGType(InformationType type) =>
     type switch
     {
         InformationType.Important => "bg-cyan-500",
         InformationType.Academic => "bg-teal-500",
         InformationType.Events => "bg-amber-500",
         InformationType.General => "bg-gray-500",
         _ => "text-gray-600"
     };
    private string TextType(InformationType type) =>
      type switch
      {
      InformationType.Important => "text-cyan-600",
      InformationType.Academic => "text-teal-600",
      InformationType.Events => "text-amber-600",
      InformationType.General => "text-gray-600",
      _ => "text-gray-600"
      };
}