@page "/studentmanagement"
@using static SYSTEM_INGTEGRATION_NEMSU.Client.Services.PageState
@inject PageState pageState
@rendermode InteractiveServer

@inject IHandlingStudentsApi handlingStudentsApi

<div class="relative h-screen content overflow-hidden animate-fade-in">
    <div class="drawer lg:drawer-open h-screen  ">
        <input id="my-drawer-2" type="checkbox" class="drawer-toggle " />
        <div class="drawer-content flex flex-col h-screen overflow-auto ">

            <label for="my-drawer-2" class=" btn btn-primary drawer-button lg:hidden m-4 ">
                Open drawer
            </label>

            <div class="flex-1 p-6 " style="background: linear-gradient(135deg, #f0fdfa 0%, #ecfeff 100%);">

               
                @if (pageState.Studentsview == PageState.StudentsView.AllStudents)
                {
                    <div>
                        <button @onclick="()=> pageState.SetViewStudent(StudentsView.CurrentStudents)" class="cursor-pointer inline-flex items-center gap-2 text-cyan-700 hover:text-cyan-700 font-semibold text-sm mb-4">
                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                            </svg>
                            Back to Dashboard
                        </button>
                    </div>
                    <div class="mb-5">
                        <h1 class="text-2xl font-semibold text-cyan-700 mb-0.5">Student List</h1>
                        <p class="text-gray-500 text-xs">Manage and view student records</p>
                    </div>
                }

                else if (pageState.Studentsview == PageState.StudentsView.ByDepartment)
                {
                    <div>
                        <button @onclick="()=> pageState.SetViewStudent(StudentsView.CurrentStudents)" class="cursor-pointer inline-flex items-center gap-2 text-cyan-700 hover:text-cyan-700 font-semibold text-sm mb-4">
                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                            </svg>
                            Back to Dashboard
                        </button>
                    </div>
                    <div class="mb-5">
                        <h1 class="text-2xl font-semibold text-cyan-700 mb-0.5">Enrolled By Department</h1>
                        <p class="text-gray-500 text-xs">Manage and view student Enrolled by Department</p>
                    </div>
                }
                else if (pageState.Studentsview == PageState.StudentsView.CurrentStudents)
                {
                      <div>
                        <NavLink href="/facultymainmenu" class="cursor-pointer inline-flex items-center gap-2 text-cyan-700 hover:text-cyan-700 font-semibold text-sm mb-4">
                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                            </svg>
                            Back to Menu
                        </NavLink>
                    </div>
                    <div class="mb-5">
                        <h1 class="text-2xl font-semibold text-cyan-700 mb-0.5">Student Dashboard</h1>
                        <p class="text-gray-500 text-xs">Manage and view student records</p>
                    </div>
                }
                else if (pageState.Studentsview == PageState.StudentsView.ByDepartment)
                {
                    <div class="mb-5">
                        <h1 class="text-2xl font-bold text-cyan-700 mb-0.5">Enrolled By Department</h1>
                        <p class="text-gray-500 text-xs">Manage and view student Enrolled by Department</p>
                    </div>
                }
                else
                {
                    <div class="mb-5">
                        <h1 class="text-2xl font-bold text-cyan-700 mb-0.5">Student Information</h1>
                        <p class="text-gray-500 text-xs">Manage and view student records</p>
                    </div>
                }

               
                <div class="grid grid-cols-4 gap-3 mb-4 ">
                    <div class="lg:col-span-2 bg-white rounded-lg shadow-sm p-3 border border-cyan-100">
                        <label class="block text-[10px] font-semibold text-gray-500 mb-1.5 uppercase tracking-wide">Search Students</label>
                        <div class="relative">
                            <div class="absolute inset-y-0 left-0 pl-2.5 flex items-center pointer-events-none">
                                <svg class="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                                </svg>
                            </div>
                            <input type="text"
                            @bind="SearchQuery"
                            @bind:event="oninput"
                            @onkeyup="FilterStudent"
                            class="w-[100%] pl-9 pr-3 py-1.5 text-xs border border-gray-200 rounded-md focus:border-cyan-400 focus:ring-1 focus:ring-cyan-200 outline-none transition-all"
                            placeholder="Search by name, ID, or email..." />
                        </div>
                    </div>

                    <NavLink @onclick="()=> pageState.SetViewStudent(PageState.StudentsView.AllStudents)" class="btn h-full bg-teal-500 btn-outline btn-teal-600 text-white rounded-lg shadow-sm p-3">
                        <div class="flex items-center justify-between gap-2">
                            <div class="flex flex-row items-center gap-3">
                                <h1 class="text-center font-normal text-xl">View All Students</h1>
                            </div>
                            <div class="w-10 h-10 bg-white/20 rounded-lg flex items-center justify-center">
                                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z"></path>
                                </svg>
                            </div>
                        </div>
                    </NavLink>

                    <NavLink @onclick="()=> pageState.SetViewStudent(PageState.StudentsView.ByDepartment)" class="btn h-full bg-teal-500 btn-outline btn-teal-600 text-white rounded-lg shadow-sm p-3">
                        <div class="flex items-center justify-between gap-5">
                            <div class="flex flex-row items-center gap-3">
                                <h1 class="text-center font-normal text-xl">Dept. Enrolled</h1>
                            </div>
                            <div class="w-10 h-10 bg-white/20 rounded-lg flex items-center justify-center">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2.5">
                                    <path stroke-linecap="round" stroke-linejoin="round" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4" />
                                </svg>
                            </div>
                        </div>
                    </NavLink>
                </div>

      
                @if (!hasrender)
                {
                    <div class="flex justify-center items-center py-32">
                        <div class="text-center">
                            <div class="relative">
                                <div class="w-20 h-20 border-4 border-cyan-200 border-t-cyan-600 rounded-full animate-spin mx-auto"></div>
                            </div>
                            <p class="text-gray-600 mt-6 text-lg font-semibold">Loading Students...</p>
                        </div>
                    </div>
                }
                else
                {
                   
                    @if (pageState.Studentsview == PageState.StudentsView.CurrentStudents)
                    {
                        <FacultyDashhboardStudents />
                    }
                    else if (pageState.Studentsview == PageState.StudentsView.SearchStudents)
                    {
                        <FacultyFilterStudent FilteredStudents="FilteredStudents" />
                    }
                    else if (pageState.Studentsview == PageState.StudentsView.ByDepartment)
                    {
                        <FacultyByDepartmentView />
                    }
                    else if (pageState.Studentsview == PageState.StudentsView.AllStudents)
                    {
                        <FacultyAllStudents/>
                    }
                }
            </div>
        </div>

       
        <div class="drawer-side">
            <label for="my-drawer-2" aria-label="close sidebar" class="drawer-overlay"></label>
            <ul class="menu min-h-full w-62 p-4 text-white" style="background: radial-gradient(at 0% 0%, rgb(6, 182, 212) 0px, transparent 50%), radial-gradient(at 100% 100%, rgb(14, 116, 144) 0px, transparent 50%), radial-gradient(at 100% 0%, rgb(8, 145, 178) 0px, transparent 50%), radial-gradient(at 0% 100%, rgb(21, 94, 117) 0px, transparent 50%), rgb(17, 24, 39);">
                <li class="mx-auto mb-4">
                    <div class="w-[92px] h-[92px] bg-gradient-to-br from-amber-50 to-amber-50 rounded-full flex items-center justify-center border-4 border-orange-300 shadow-lg">
                        <svg class="w-13 h-13 text-amber-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path>
                        </svg>
                    </div>
                </li>
                <li><a class="text-white text-2xl font-light btn btn-outline btn-dash btn-primary">Student Records</a></li>
                <li class="mt-10"><NavLink href="/studentinformation" class="text-white text-md btn-[40%] font-semibold btn btn-outline btn-primary">Student Information</NavLink></li>
                <li class="mt-2"><a class="text-white text-md btn-[40%] font-semibold btn btn-outline btn-primary">Settings</a></li>
                <li class="mt-2"><a class="text-white text-md btn-[40%] font-semibold btn btn-outline btn-primary">Logout</a></li>
                <li class="mt-10"><NavLink href="/coursemanagemnt" class="text-white text-md btn-[40%] font-semibold btn btn-outline btn-primary">Course Management</NavLink></li>
                <li class="mt-2"><NavLink href="/facultyannouncement" class="text-white text-md btn-[40%] font-semibold btn btn-outline btn-primary">Announcements</NavLink></li>
                <li class="mt-2"><NavLink href="/facultyprofile" class="text-white text-md btn-[40%] font-semibold btn btn-outline btn-primary">Profile</NavLink></li>
            </ul>
        </div>
    </div>
</div>

@code {
    private List<HandlingStudentsDto>? AllStudents { get; set; }
    private List<HandlingStudentsDto>? FilteredStudents { get; set; } = new();
   


    private string SearchQuery = "";
    private bool hasrender = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !hasrender)
        {
            hasrender = true;

            try
            {

                AllStudents = await handlingStudentsApi.DisplayStudentsAsync();
                FilteredStudents = AllStudents;
            }
            catch (HttpRequestException ex)
            {
                Console.WriteLine($"Authentication error: {ex.Message}");
            }

            StateHasChanged(); 
        }
    }

    private void FilterStudent()
    {
      

        if (AllStudents == null || !AllStudents.Any())
        {
            return;
        }

        if (string.IsNullOrWhiteSpace(SearchQuery))
        {
          
            FilteredStudents = AllStudents;
        }
        else
        {
         
            var query = SearchQuery.ToLower();
            FilteredStudents = AllStudents.Where(s =>
                s.StudentName!.ToLower().Contains(query) ||
                s.StudentSchoolId!.ToLower().Contains(query) ||
                s.Email!.ToLower().Contains(query)
            ).ToList();
        }

        pageState.SetViewStudent(PageState.StudentsView.SearchStudents);
        StateHasChanged();
    }
}