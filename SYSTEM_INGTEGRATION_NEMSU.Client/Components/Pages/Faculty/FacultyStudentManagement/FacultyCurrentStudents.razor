@rendermode InteractiveServer
@inject IHandlingStudentsApi handlingStudentsApi


@if (Students is not null)
{
    foreach (var student in Students)
    {
        <NavLink href="@($"facultyviewtudents/{student.StudentId}")" class="bg-white rounded-lg shadow-sm border border-cyan-100 p-3 hover:shadow-md transition-all hover:border-cyan-300">
            <div class="flex items-start justify-between mb-2">
                <div class="flex items-center gap-2">
                    <div class="w-10 h-10 bg-gradient-to-br from-cyan-400 to-cyan-600 rounded-lg flex items-center justify-center text-white font-bold text-xs">
                        CV
                    </div>
                    <div>
                        <p class="text-xs font-semibold text-gray-800">@student.StudentName</p>
                        <p class="text-[10px] text-gray-500">@student.StudentSchoolId</p>
                    </div>
                </div>
                <span class="px-2 py-0.5 rounded-full text-[9px] font-semibold   border  @(student.studentCourseStatus == StudentCourseStatus.Inactive ? "border-amber-200  bg-amber-50 text-amber-600" : " bg-emerald-50 border-emerald-200  text-emerald-700")">
                    @student.studentCourseStatus?.GetDisplayName()
                </span>
            </div>
          <div class="flex justify-between">
                <div class="space-y-1">
                    <p class="text-[10px] text-gray-600 truncate">@student.Email</p>
                    <p class="text-[10px] text-gray-700 font-medium">@student.CourseTitle</p>
                </div>
                <span class="text-[10px]  mt-5 text-gray-700">@student.DateEnrolled.ToString("MMMM dd, yyyy")</span>
          </div>
        </NavLink>
    }

}



@code {
    [Parameter]
    public List<HandlingStudentsDto>? Students { get; set; }
    private bool hasrender = false;
   
}
